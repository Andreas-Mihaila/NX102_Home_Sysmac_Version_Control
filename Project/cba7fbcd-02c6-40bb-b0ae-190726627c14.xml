{"CLs":[{"__type":"LD","Var":"P_On"},{"__type":"IST","EID":"2986f540-a78d-4ddc-892f-addd1ff64c4d","H":971.99999999999977,"Ix":1,"TXT":"\/\/ Simulation of some data incomes from the FHV7 camera\u000d\u000a\u000d\u000aClock_1_Minute := Get1minClk();\u000d\u000aClock_1_Second := Get1sClk();\u000d\u000a\u000d\u000aRandom_Numbers_Seed := UINT#0;\u000d\u000a\u000d\u000aCTU_Preset_Value := INT#32678;\u000d\u000a\u000d\u000a\/\/ Positive Edge from Clock or Sensor\u000d\u000a\u000d\u000aR_TRIG_Instance(Clock_1_Minute, Clock_1_Minute_RE_Output);\u000d\u000aR_TRIG_Sensor(Default_Sensor, Default_Sensor_Rising);\u000d\u000a\u000d\u000aF_TRIG_Sensor_Instance(Default_Sensor, Default_Sensor_Falling);\u000d\u000a\u000d\u000a\/\/ Getting some LREAL Random Values\u000d\u000a\u000d\u000aRandom_Numbers_Instance(Clock_1_Second, Random_Numbers_Seed, Random_Numbers_Output_Number_LREAL);\u000d\u000a\u000d\u000a\/\/ Convert LREAL to REAL types\u000d\u000a\u000d\u000aRandom_Numbers_Output_Number_REAL := LREAL_TO_REAL(Random_Numbers_Output_Number_LREAL * 100);\u000d\u000a\u000d\u000a\/\/ Counter for Measurement Array\u000d\u000a\u000d\u000aCTU_Instance(Clock_1_Minute, NOT Default_Sensor, CTU_Preset_Value, CTU_Output, CTU_Counter_Value);\u000d\u000aCTU_Counter_Value_UINT := INT_TO_UINT(CTU_Counter_Value);\u000d\u000a\u000d\u000aIF Default_Sensor AND Clock_1_Minute_RE_Output THEN\u000d\u000a\u0009\u000d\u000a\u0009FHV7_Measurement_Array[CTU_Counter_Value] := Random_Numbers_Output_Number_REAL;\u000d\u000a\u0009\u000d\u000aEND_IF;\u000d\u000a\u000d\u000aIF Default_Sensor_Falling THEN \u000d\u000a\u0009\u000d\u000a\u0009FHV7_Measurement_Smallest_Value := AryMin(FHV7_Measurement_Array[1], CTU_Counter_Value_UINT, FHV7_Measurement_Array_Minimum_Found, FHV7_Measurement_Array_Minimum_Value);\u000d\u000a\u0009\u000d\u000aEND_IF;\u000d\u000a\u000d\u000aIF Default_Sensor_Rising THEN\u000d\u000a\u0009\u000d\u000a\u0009Clear(FHV7_Measurement_Array);\u000d\u000a\u0009\u000d\u000aEND_IF;","W":1724,"X":1}],"LRI":2,"RRI":3,"VLs":[]}
