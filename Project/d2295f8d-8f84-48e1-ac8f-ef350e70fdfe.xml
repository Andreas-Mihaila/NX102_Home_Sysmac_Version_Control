<StructuredTextModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.StructuredText.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Text>///Status extraction///&#xD;
	tmp_Status.ch := UINT_TO_WORD( Status);&#xD;
	DriveStatus.DuringRun	:=	tmp_Status.bit[0];&#xD;
	DriveStatus.DuringZeroSpeed	:=	tmp_Status.bit[1];&#xD;
	DriveStatus.ReverseRunning	:=	tmp_Status.bit[2];&#xD;
	DriveStatus.DuringFaultResetSignalInput	:=	tmp_Status.bit[3];&#xD;
	DriveStatus.DuringSpeedAgree	:=	tmp_Status.bit[4];&#xD;
	DriveStatus.DuringDriveReady	:=	tmp_Status.bit[5];&#xD;
	DriveStatus.DuringAlarm	:=	tmp_Status.bit[6];&#xD;
	DriveStatus.DuringFault	:=	tmp_Status.bit[7];&#xD;
	DriveStatus.DuringOperationError	:=	tmp_Status.bit[8];&#xD;
	DriveStatus.DuringMomentaryPowerLoss	:=	tmp_Status.bit[9];&#xD;
	DriveStatus.NetCtrlStatus	:=	tmp_Status.bit[10];&#xD;
	DriveStatus.DigitalOutput1Status	:=	tmp_Status.bit[11];&#xD;
	DriveStatus.DigitalOutput2Status	:=	tmp_Status.bit[12];&#xD;
	DriveStatus.DigitalOutput3Status	:=	tmp_Status.bit[13];&#xD;
	DriveStatus.Motor2Selected	:=	tmp_Status.bit[14];&#xD;
	DriveStatus.ZeroServoEnd	:=	tmp_Status.bit[15];&#xD;
&#xD;
&#xD;
///Command extraction///&#xD;
IF Enable THEN;&#xD;
	tmp_Command.bit[0] := Fwd;&#xD;
	tmp_Command.bit[1] := Rev;&#xD;
	Active:=TRUE;&#xD;
ELSE&#xD;
	tmp_Command.bit[0] := FALSE;&#xD;
	tmp_Command.bit[1] := FALSE;&#xD;
	Active:=FALSE;&#xD;
END_IF;&#xD;
	tmp_Command.bit[3] := FaultReset;&#xD;
	Command := WORD_TO_UINT( tmp_Command.ch);&#xD;
&#xD;
//0 Frequence //&#xD;
IF Enable and (FrequencyReference&lt;=UINT#0) and (Fwd or Rev) THEN;&#xD;
	Frequency0HzWarning:=TRUE;&#xD;
ELSE&#xD;
	Frequency0HzWarning:=FALSE;&#xD;
END_IF;</Text></StructuredTextModel>